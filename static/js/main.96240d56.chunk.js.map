{"version":3,"sources":["components/Button/Button.style.js","components/Button/Button.js","components/Form/Form.style.js","components/Form/Form.js","components/Contacts/Contacts.style.js","components/Contacts/Contacts.js","components/Filter/Filter.style.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["CustomButton","styled","button","Button","type","text","onClick","CustomForm","form","Input","input","Form","state","name","number","nameInputId","unId","numInputId","handleSubmit","e","preventDefault","props","onSubmit","reset","setState","handleChange","currentTarget","value","this","htmlFor","id","placeholder","pattern","title","required","onChange","Component","Container","div","ContactList","ul","Item","li","TextP","p","NameSpan","span","DelBtn","Contacts","contacts","onDeleteContact","map","Filter","Section","children","App","filter","checkName","contact","find","cont","toLowerCase","includes","addContact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96240d56.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const CustomButton = styled.button`\r\n  width: 150px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: green;\r\n  border-radius: 50px;\r\n`;","import React from 'react';\r\nimport { CustomButton} from './Button.style';\r\n\r\nfunction Button({type,text,onClick }) {\r\n      return <CustomButton type={type} onClick={onClick}>{text}</CustomButton>;\r\n}\r\n\r\nexport default Button\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CustomForm = styled.form`\r\ndisplay: inline-flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nborder-style: dashed;\r\nborder-color: aqua;\r\noutline-color: tomato;\r\nmargin-bottom: 15px;\r\n`;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport { v4 as unId } from 'uuid';\r\nimport {CustomForm,Input} from './Form.style';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number:'',\r\n  };\r\n  nameInputId = unId();\r\n  numInputId = unId();\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n     this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number:'',\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    \r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CustomForm onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          <Input\r\n            id={this.nameInputId}\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numInputId}>\r\n          <Input\r\n            id={this.numInputId}\r\n            placeholder=\"Tel\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n      <Button text=\"Add contact\" type=\"submit\"/>\r\n    </CustomForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nborder-style: dotted;\r\n    display: inline-block;\r\n    padding-left: 15px;\r\n    padding-right: 30px;\r\n`;\r\n\r\nexport const ContactList = styled.ul`\r\ndisplay: inline-block;\r\nlist-style-type: decimal;\r\nfont-size: x-large;\r\n`;\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: 15px;\r\n`;\r\n\r\nexport const TextP = styled.p`\r\nfont-size: x-large;\r\nmargin-right: 20px;\r\n`;\r\n\r\nexport const NameSpan = styled.span`\r\nfont-weight: bold;\r\nfont-family: sans-serif;\r\n`;\r\n\r\nexport const DelBtn = styled.button`\r\nbackground-color: red;\r\nborder-radius: 45%;\r\nwidth: 60px;\r\nheight: 30px;\r\n\r\ncursor: pointer;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container,ContactList,Item,NameSpan,TextP,DelBtn } from './Contacts.style';\r\n\r\nfunction Contacts({ contacts, onDeleteContact }) {\r\n    \r\n    return (\r\n        <Container>        \r\n            <ContactList>\r\n                {contacts.map(({ id, name,number }) => (\r\n                    <Item key={id}>\r\n                        <TextP><NameSpan>{name}</NameSpan>: {number}</TextP>\r\n                        <DelBtn type=\"button\" onClick={() => onDeleteContact(id)}>Delete</DelBtn>\r\n                    </Item>\r\n                ))}\r\n            </ContactList>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nmargin-bottom: 15px;\r\n`;\r\n\r\nexport const TextP = styled.p`\r\nmargin-top: 0px;\r\nmargin-bottom: 0px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nimport{Container,TextP} from './Filter.style'\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n      <Container>\r\n          <TextP>Find contacts by name</TextP>\r\n          <input placeholder=\"Search\" type=\"text\" value={value} onChange={onChange} />        \r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Section({title,children}) {\r\n    return (\r\n        <section>\r\n              <h2 >{title}</h2>\r\n      {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};","import React, { Component } from 'react';\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport Section from './components/Section/Section';\n\nimport { v4 as unId } from 'uuid';\nimport './App.css';\n\n\nexport class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],  \n    filter: '',\n  }\n  \n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  };\n\n  checkName=((contact,contacts)=>contacts.find(cont => cont.name.toLowerCase().includes(contact.name.toLowerCase())));\n  \n  addContact = (e) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: unId(),\n      name: e.name,\n      number:e.number\n    };\n\n    this.checkName(contact, contacts)\n      ? alert(`${contact.name} is already in your list`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts], }));        \n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };;\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n     \n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n\n  render() {\n    const { filter,} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className='mainContainer'>\n        <Section title='Phonebook'>\n          <Form onSubmit={this.addContact} />\n        </Section>        \n        <Section title='Contacts'>\n          <Filter value={filter} onChange={this.changeFilter}></Filter>\n        <Contacts contacts={visibleContacts} onDeleteContact={this.deleteContact}></Contacts>\n        </Section>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}